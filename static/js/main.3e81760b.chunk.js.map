{"version":3,"sources":["api.ts","types/index.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Selected","getTodos","getUser","userId","TodoList","isLoadTodos","whichModal","query","selected","todoId","useState","todos","setTodos","selectedTodos","setSelectedTodos","useEffect","fetchData","a","todoData","isQuery","filtered","filter","todo","title","toLowerCase","includes","filteredTodo","all","active","completed","className","map","id","type","onClick","TodoFilter","handleChangeSelected","handleChangeQuery","onChange","e","target","value","placeholder","length","style","pointerEvents","Loader","TodoModal","isLoading","setIsLoading","user","setUser","setTodo","loadData","p1","p2","userData","todosData","findTodo","find","undefined","finally","href","email","name","App","loadTodos","setLoadTodos","setUserId","settodoiD","setQuery","setSelected","data","ReactDOM","render","document","getElementById"],"mappings":"oPAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICxBKC,EDwBCC,EAAW,kBAAMZ,EAAY,WAE7Ba,EAAU,SAACC,GAAD,OAAoBd,EAAG,iBAAiBc,M,SC1BnDH,K,UAAAA,E,gBAAAA,E,uBAAAA,M,gBCaCI,EAA4B,SAAC,GAMnC,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,OAEA,EAA0BC,mBAAwB,MAAlD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAwB,MAAlE,mBAAOG,EAAP,KAAsBC,EAAtB,KA8CA,OA5CAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBZ,GAAY,GADI,kBAISJ,IAJT,OAIRiB,EAJQ,OAMdN,EAASM,GACTJ,EAAiBI,GAPH,uBASdb,GAAY,GATE,yEAAH,qDAafW,MACC,IAEHD,qBAAU,WACR,IAAMI,EAAO,uCAAG,4BAAAF,EAAA,sDACVN,IACIS,EAAWT,EAAMU,QAAO,SAAAC,GAAI,OAChCA,EAAKC,MAAMC,cAAcC,SAASlB,EAAMiB,oBAIxCV,EAAiBM,EAASC,QAAO,SAAAK,GAC/B,OAAQlB,GACN,KAAKR,EAAS2B,IACZ,OAAOD,EACT,KAAK1B,EAAS4B,OACZ,OAAkC,IAA3BF,EAAaG,UACtB,KAAK7B,EAAS6B,UACZ,OAAkC,IAA3BH,EAAaG,UACtB,QACE,OAAOH,OAhBH,2CAAH,qDAuBbP,MACC,CAACZ,EAAOC,EAAUG,IAGnB,mCACE,wBAAOmB,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,uCACGjB,QADH,IACGA,OADH,EACGA,EAAekB,KAAI,SAAAT,GAAI,OACtB,qBAAI,UAAQ,OAAOQ,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BR,EAAKU,KACnC,oBAAIF,UAAU,eAAd,SACGR,EAAKO,WACJ,sBAAMC,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWR,EAAKO,UACf,mBACA,kBAFJ,SAIGP,EAAKC,UAGV,oBAAIO,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVG,KAAK,SACLC,QAAS,kBAAM5B,EAAWgB,EAAKnB,OAAQmB,EAAKU,KAJ9C,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWrB,IAAWa,EAAKU,GAC1B,mBACA,uBA3ByBV,EAAKU,eC5EzCG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,qBACAC,EAGI,EAHJA,kBACA9B,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,uBAAMsB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRQ,SAAU,SAACC,GAAD,OAAOH,EAAqBG,EAAEC,OAAOC,QAC/CA,MAAOjC,EAHT,UAKE,wBAAQiC,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGX,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRG,KAAK,OACLH,UAAU,QACVY,YAAY,YACZD,MAAOlC,EACP+B,SAAU,SAACC,GAAD,OAAOF,EAAkBE,EAAEC,OAAOC,UAE9C,sBAAMX,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdvB,EAAMoC,OAAS,GACd,sBAAMb,UAAU,gBAAgBc,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLH,UAAU,SACVI,QAAS,kBAAMG,EAAkB,gBChDlCS,G,MAAmB,kBAC9B,qBAAKhB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCONiB,EAA6B,SAAC,GAIpC,IAHL5C,EAGI,EAHJA,OACAM,EAEI,EAFJA,OACAH,EACI,EADJA,WAEA,EAAkCI,oBAAS,GAA3C,mBAAOsC,EAAP,KAAkBC,EAAlB,KACA,EAAwBvC,mBAAsB,MAA9C,mBAAOwC,EAAP,KAAaC,EAAb,KACA,EAAwBzC,mBAAsB,MAA9C,mBAAOY,EAAP,KAAa8B,EAAb,KA6BA,OA3BArC,qBAAU,WACR,IAAMsC,EAAQ,uCAAG,8BAAApC,EAAA,sDACA,OAAXd,GAA8B,OAAXM,GACrBwC,GAAa,GACbE,EAAQ,MACRC,EAAQ,MACFE,EAAKpD,EAAQC,GACboD,EAAKtD,IAEXR,QAAQkC,IAAI,CAAC2B,EAAIC,IACd3D,MAAK,YAA4B,IAAD,mBAAzB4D,EAAyB,KAAfC,EAAe,KAC/BN,EAAQK,GACR,IAAME,EAAWD,EAAUE,MAAK,SAAAzC,GAAQ,OAAIA,EAASc,KAAOvB,UAE3CmD,IAAbF,GACFN,EAAQM,MAGXG,SAAQ,kBAAMZ,GAAa,OAE9BA,GAAa,GAnBA,2CAAH,qDAuBdI,MACC,CAAClD,EAAQM,IAGV,4CACGuC,QADH,IACGA,IACC,cAAC,EAAD,IAECE,GAAQ5B,GACT,sBAAKQ,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBADjB,OAGGkB,QAHH,IAGGA,IACC,cAAC,EAAD,IAEF,sBAAKlB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,mBAKGR,EAAKU,MAIR,wBACEC,KAAK,SACLH,UAAU,SACV,UAAQ,cACRI,QAAS,WACPiB,EAAQ,MACRC,EAAQ,MACR9C,EAAW,KAAM,YAKvB,sBAAKwB,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGR,EAAKC,QAGR,oBAAGO,UAAU,QAAQ,UAAQ,aAA7B,UACE,wBAAQA,UAAWR,EAAKO,UACpB,mBACA,kBAFJ,SAIGP,EAAKO,UAAY,OAAS,YAG5B,OAED,mBAAGiC,KAAI,iBAAYZ,EAAKa,OAAxB,SACGb,EAAKc,uBCxFXC,EAAgB,WAC3B,MAAkCvD,oBAAS,GAA3C,mBAAOwD,EAAP,KAAkBC,EAAlB,KACA,EAA4BzD,mBAAwB,MAApD,mBAAOP,EAAP,KAAeiE,EAAf,KACA,EAA4B1D,mBAAwB,MAApD,mBAAOD,EAAP,KAAe4D,EAAf,KACA,EAA0B3D,mBAAS,IAAnC,mBAAOH,EAAP,KAAc+D,EAAd,KACA,EAAgC5D,mBAAmBV,EAAS2B,KAA5D,mBAAOnB,EAAP,KAAiB+D,EAAjB,KAMMjE,EAAa,SAAC4C,EAAqB5B,GACvC8C,EAAUlB,GACVmB,EAAU/C,IAWZ,OACE,qCACE,qBAAKQ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEM,qBAbe,SAACoC,GAC5BD,EAAYC,IAaAnC,kBAlBY,SAACmC,GACzBF,EAASE,IAkBGjE,MAAOA,EACPC,SAAUA,MAId,sBAAKsB,UAAU,QAAf,UACGoC,GAAa,cAAC,EAAD,IACd,cAAC,EAAD,CACE7D,YApCM,SAACmE,GACnBL,EAAaK,IAoCDlE,WAAYA,EACZC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,cAOlB,cAAC,EAAD,CACEN,OAAQA,EACRM,OAAQA,EACRH,WAAYA,QCjEpBmE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e81760b.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Selected {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../api';\nimport { Selected } from '../../types/index';\n\ntype Props = {\n  isLoadTodos: (data: boolean) => void;\n  whichModal: (todo: number, userId: number) => void;\n  query: string;\n  selected: Selected;\n  todoId: number | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  isLoadTodos,\n  whichModal,\n  query,\n  selected,\n  todoId,\n}) => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [selectedTodos, setSelectedTodos] = useState<Todo[] | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      isLoadTodos(true);\n\n      try {\n        const todoData = await getTodos();\n\n        setTodos(todoData);\n        setSelectedTodos(todoData);\n      } finally {\n        isLoadTodos(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const isQuery = async () => {\n      if (todos) {\n        const filtered = todos.filter(todo => (\n          todo.title.toLowerCase().includes(query.toLowerCase())\n        ));\n\n        if (filtered) {\n          setSelectedTodos(filtered.filter(filteredTodo => {\n            switch (selected) {\n              case Selected.all:\n                return filteredTodo;\n              case Selected.active:\n                return filteredTodo.completed === false;\n              case Selected.completed:\n                return filteredTodo.completed === true;\n              default:\n                return filteredTodo;\n            }\n          }));\n        }\n      }\n    };\n\n    isQuery();\n  }, [query, selected, todos]);\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {selectedTodos?.map(todo => (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => whichModal(todo.userId, todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={todoId === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n","import { Selected } from '../../types/index';\n\ntype Props = {\n  handleChangeSelected: (data: Selected) => void;\n  handleChangeQuery: (data: string) => void;\n  query: string;\n  selected: Selected;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleChangeSelected,\n  handleChangeQuery,\n  query,\n  selected,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => handleChangeSelected(e.target.value as Selected)}\n            value={selected}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => handleChangeQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number | null;\n  todoId: number | null;\n  whichModal: (todo: number | null, userId: number | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  todoId,\n  whichModal,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (userId !== null && todoId !== null) {\n        setIsLoading(true);\n        setUser(null);\n        setTodo(null);\n        const p1 = getUser(userId);\n        const p2 = getTodos();\n\n        Promise.all([p1, p2])\n          .then(([userData, todosData]) => {\n            setUser(userData);\n            const findTodo = todosData.find(todoData => todoData.id === todoId);\n\n            if (findTodo !== undefined) {\n              setTodo(findTodo);\n            }\n          })\n          .finally(() => setIsLoading(false));\n      } else {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, [userId, todoId]);\n\n  return (\n    <>\n      {isLoading ?? (\n        <Loader />\n      )}\n      { (user && todo) && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n\n          {isLoading ?? (\n            <Loader />\n          )}\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setUser(null);\n                  setTodo(null);\n                  whichModal(null, null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Selected } from './types/index';\n\nexport const App: React.FC = () => {\n  const [loadTodos, setLoadTodos] = useState(false);\n  const [userId, setUserId] = useState<number | null>(null);\n  const [todoId, settodoiD] = useState<number | null>(null);\n  const [query, setQuery] = useState('');\n  const [selected, setSelected] = useState<Selected>(Selected.all);\n\n  const isLoadTodos = (data: boolean | ((prevState: boolean) => boolean)) => {\n    setLoadTodos(data);\n  };\n\n  const whichModal = (user: number | null, todo: number | null) => {\n    setUserId(user);\n    settodoiD(todo);\n  };\n\n  const handleChangeQuery = (data: string) => {\n    setQuery(data);\n  };\n\n  const handleChangeSelected = (data: Selected) => {\n    setSelected(data);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleChangeSelected={handleChangeSelected}\n                handleChangeQuery={handleChangeQuery}\n                query={query}\n                selected={selected}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadTodos && <Loader />}\n              <TodoList\n                isLoadTodos={isLoadTodos}\n                whichModal={whichModal}\n                query={query}\n                selected={selected}\n                todoId={todoId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        userId={userId}\n        todoId={todoId}\n        whichModal={whichModal}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}