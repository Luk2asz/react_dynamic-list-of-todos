{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","handleTodoSelect","query","selectedFilter","todoId","filteredTodos","useMemo","queryFilter","filter","todo","title","toLowerCase","includes","all","isCompleted","completed","className","map","id","type","onClick","TodoFilter","handleChangeSelected","handleChangeQuery","onChange","e","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","selectedTodo","useState","isLoading","setIsLoading","user","setUser","setTodo","useEffect","loadData","a","userId","p1","p2","userData","todosData","findTodo","find","todoData","undefined","finally","href","email","name","App","isLoadingTodos","setIsLoadingTodos","setSelectedTodo","setQuery","setSelectedFilter","setTodos","fetchData","useCallback","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a198574.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useMemo } from 'react';\nimport { Todo, Filter } from '../../types/index';\n\ntype Props = {\n  todos: Todo[] | null;\n  handleTodoSelect: (todo: Todo) => void;\n  query: string;\n  selectedFilter: Filter;\n  todoId: number | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleTodoSelect,\n  query,\n  selectedFilter,\n  todoId,\n}) => {\n  const filteredTodos = useMemo(() => {\n    const queryFilter = todos?.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    if (selectedFilter === Filter.all) {\n      return queryFilter;\n    }\n\n    const isCompleted = selectedFilter === Filter.completed;\n\n    return queryFilter?.filter(({ completed }) => completed === isCompleted);\n  }, [query, selectedFilter, todos]);\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {filteredTodos?.map(todo => (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleTodoSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={todoId === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n    </>\n  );\n};\n","import { Filter } from '../../types/index';\n\ntype Props = {\n  handleChangeSelected: (data: Filter) => void;\n  handleChangeQuery: (data: string) => void;\n  query: string;\n  selectedFilter: Filter;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleChangeSelected,\n  handleChangeQuery,\n  query,\n  selectedFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => handleChangeSelected(e.target.value as Filter)}\n            value={selectedFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => handleChangeQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { Todo, User } from '../../types/index';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  handleTodoSelect: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleTodoSelect,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (selectedTodo !== null) {\n        setIsLoading(true);\n        setUser(null);\n        setTodo(null);\n        const p1 = getUser(selectedTodo.userId);\n        const p2 = getTodos();\n\n        Promise.all([p1, p2])\n          .then(([userData, todosData]) => {\n            setUser(userData);\n            const findTodo = todosData.find(\n              todoData => todoData.id === selectedTodo.id,\n            );\n\n            if (findTodo !== undefined) {\n              setTodo(findTodo);\n            }\n          })\n          .finally(() => setIsLoading(false));\n      } else {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, [selectedTodo]);\n\n  return (\n    <>\n      {isLoading ?? (\n        <Loader />\n      )}\n      { (user && todo) && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n\n          {isLoading ?? (\n            <Loader />\n          )}\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setUser(null);\n                  setTodo(null);\n                  handleTodoSelect(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\nimport { Todo } from './types/index';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoadingTodos, setIsLoadingTodos] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState<Filter>(Filter.all);\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoadingTodos(true);\n      try {\n        const todoData = await getTodos();\n\n        setTodos(todoData);\n      } finally {\n        setIsLoadingTodos(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleTodoSelect = useCallback((todo: Todo | null) => setSelectedTodo(todo), [setSelectedTodo]);\n\n  const handleChangeQuery = (data: string) => {\n    setQuery(data);\n  };\n\n  const handleChangeSelected = (data: Filter) => {\n    setSelectedFilter(data);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleChangeSelected={handleChangeSelected}\n                handleChangeQuery={handleChangeQuery}\n                query={query}\n                selectedFilter={selectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos ? <Loader /> : (\n                <TodoList\n                  todos={todos}\n                  handleTodoSelect={handleTodoSelect}\n                  query={query}\n                  selectedFilter={selectedFilter}\n                  todoId={selectedTodo ? selectedTodo.id : null}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={selectedTodo}\n        handleTodoSelect={handleTodoSelect}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}